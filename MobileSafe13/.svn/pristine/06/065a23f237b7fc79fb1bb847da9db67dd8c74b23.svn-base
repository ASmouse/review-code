package com.itheima.mobilesafe13.utils;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;

import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.os.Environment;

/**
 * @author Administrator
 * @desc 短信备份还原的tool  格式：json
 * @date 2015-9-20
 * @Author $Author$ Id Rev URL
 * @Date $Date$
 * @Id $Id$
 * @Rev $Rev$
 * @URL $URL$
 *
 */
public class SmsUtils {
	public static void smsBaike(Context context){
		File file = null;
		//文件 sd
		if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){
			//有sd卡
			//是否有剩余空间
			//获取sd剩余空间
			long freeSpace = Environment.getExternalStorageDirectory().getFreeSpace();
			if (freeSpace  < 1024 * 1024 * 5) {
				//小于5m
				throw new RuntimeException("sd 卡空间不足，请先删除信息释放空间");
			} else {
				//正常
				file = new File(Environment.getExternalStorageDirectory(),"smses.json");
			}
		} else {
			throw new RuntimeException("sd 卡挂载不成功，或者没有sd卡");
		}
		
		try {
			final PrintWriter out = new PrintWriter(file);
			out.println("{\"smses\":[");
			//短信数据库
			Uri uri = Uri.parse("content://sms");
			final Cursor cursor = context.getContentResolver().query(uri , new String[]{"address",  "date",  "body", "type"}, null, null, null);
			
			//子线程拷贝
			new Thread(){
				public void run() {
					String sms = null;
					while (cursor.moveToNext()) {
						//游标循环一条数据 ，写一条数据
						//取一条短信{"address":"112333","date":"322143432432","body":"hello","type":"1"},
						sms  = "{";
						sms += "\"address\":\"" + cursor.getString(0) + "\"";
						sms += ",\"date\":\"" + cursor.getString(1) + "\"";
						sms += ",\"body\":\"" + cursor.getString(2) + "\"";
						sms += ",\"type\":\"" + cursor.getString(3) + "\"}"; 
						
						//判断是否是最后一条信息
						if (cursor.isLast()) {
							sms += "]}";
						} else {
							sms += ",";
						}
						
						//写到文件中
						out.println(sms);
						out.flush();
					}
					//备份结束
					out.close();
					cursor.close();
				};
			}.start();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			// can't reach
			throw new RuntimeException(e.getMessage());
		}
		
		
	}
}
